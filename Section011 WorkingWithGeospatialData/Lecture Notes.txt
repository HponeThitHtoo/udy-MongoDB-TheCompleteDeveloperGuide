===================
Adding GeoJSON Data
===================
> use awesomeplaces
switched to db awesomeplaces
> db.places.insertOne({name: "California Academy of Sciences", location: {type: "Point", coordinates: [-122.468956, 37.770086]}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("5d974e2e3f9347eb92815791")
}


===================
Running Geo Queries
===================
> db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.469894, 37.771824]}}}})
Error: error: {
        "ok" : 0,
        "errmsg" : "error processing query: ns=awesomeplaces.placesTree: GEONEAR  field=location maxdist=1.79769e+308 isNearSphere=0\nSort: {}\nProj: {}\n planner returned error :: caused by :: unable to find index for $geoNear query",
        "code" : 2,
        "codeName" : "BadValue"
}


=========================================
Adding a Geospatial Index to Track the Distance  (sorted list, by distance)
=========================================
> db.places.createIndex({location: "2dsphere"})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
> db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.469894, 37.771824]}}}}).pretty()
{
        "_id" : ObjectId("5d974e2e3f9347eb92815791"),
        "name" : "California Academy of Sciences",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.468956,
                        37.770086
                ]
        }
}

*** min, max is in meter

> db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.469894, 37.771824]}, $maxDistance: 30, $minDistance: 10}}}).pretty()
> db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.469894, 37.771824]}, $maxDistance: 400, $minDistance: 10}}}).pretty()
{
        "_id" : ObjectId("5d974e2e3f9347eb92815791"),
        "name" : "California Academy of Sciences",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.468956,
                        37.770086
                ]
        }
}


=========================
Adding Additional Locations
=========================
> db.places.insertOne({name: "Conservatory of Flowers", location: {type: "Point", coordinates: [-122.462492, 37.771532]}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("5d9753d83f9347eb92815792")
}
> db.places.insertOne({name: "Golden Gate Tennis Park", location: {type: "Point", coordinates: [-122.462492, 37.771532]}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("5d97541a3f9347eb92815793")
}
> db.places.insertOne({name: "Nopa", location: {type: "Point", coordinates: [-122.4538163, 37.7732904]}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("5d9754f33f9347eb92815794")
}


> db.places.find().pretty()
{
        "_id" : ObjectId("5d974e2e3f9347eb92815791"),
        "name" : "California Academy of Sciences",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.468956,
                        37.770086
                ]
        }
}
{
        "_id" : ObjectId("5d9753d83f9347eb92815792"),
        "name" : "Conservatory of Flowers",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.462492,
                        37.771532
                ]
        }
}
{
        "_id" : ObjectId("5d97541a3f9347eb92815793"),
        "name" : "Golden Gate Tennis Park",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.462492,
                        37.771532
                ]
        }
}
{
        "_id" : ObjectId("5d9754f33f9347eb92815794"),
        "name" : "Nopa",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.4538163,
                        37.7732904
                ]
        }
}


================================
Finding Places Inside a Certain Area
================================
> const p1 = [-122.4547, 37.77473]
> const p2 = [-122.45303, 37.76641]
> const p3 = [-122.51026, 37.76411]
> const p4 = [-122.51088, 37.77131]


> db.places.find({location: {$geoWithin: {$geometry: {type: "Polygon", coordinates: [[p1, p2, p3, p4, p1]]}}}}).pretty()
{
        "_id" : ObjectId("5d974e2e3f9347eb92815791"),
        "name" : "California Academy of Sciences",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.468956,
                        37.770086
                ]
        }
}
{
        "_id" : ObjectId("5d9753d83f9347eb92815792"),
        "name" : "Conservatory of Flowers",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.462492,
                        37.771532
                ]
        }
}
{
        "_id" : ObjectId("5d97541a3f9347eb92815793"),
        "name" : "Golden Gate Tennis Park",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.462492,
                        37.771532
                ]
        }
}


======================================
Finding Out If a User Is Inside a Specific Area
======================================
> db.areas.insertOne({name: "Golden Gate Park", area: {type: "Polygon", coordinates: [[p1, p2, p3, p4, p1]]}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("5d975a7a3f9347eb92815795")
}
> db.areas.findOne()
{
        "_id" : ObjectId("5d975a7a3f9347eb92815795"),
        "name" : "Golden Gate Park",
        "area" : {
                "type" : "Polygon",
                "coordinates" : [
                        [
                                [
                                        -122.4547,
                                        37.77473
                                ],
                                [
                                        -122.45303,
                                        37.76641
                                ],
                                [
                                        -122.51026,
                                        37.76411
                                ],
                                [
                                        -122.51088,
                                        37.77131
                                ],
                                [
                                        -122.4547,
                                        37.77473
                                ]
                        ]
                ]
        }
}


> db.areas.createIndex({area: "2dsphere"})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}


> db.areas.find({area: {$geoIntersects: {$geometry: {type: "Point", coordinates: [-122.49089, 37.76992]}}}}).pretty()
{
        "_id" : ObjectId("5d975a7a3f9347eb92815795"),
        "name" : "Golden Gate Park",
        "area" : {
                "type" : "Polygon",
                "coordinates" : [
                        [
                                [
                                        -122.4547,
                                        37.77473
                                ],
                                [
                                        -122.45303,
                                        37.76641
                                ],
                                [
                                        -122.51026,
                                        37.76411
                                ],
                                [
                                        -122.51088,
                                        37.77131
                                ],
                                [
                                        -122.4547,
                                        37.77473
                                ]
                        ]
                ]
        }
}


=================================
Finding Places Within a Certain Radius  (not sorted list, by distance)
=================================
*** within 1 Km from center sphere point (check mogodb doc for further info:)
> db.places.find({location: {$geoWithin: {$centerSphere: [[-122.46203, 37.77286], 1 / 6378.1]}}}).pretty()
{
        "_id" : ObjectId("5d974e2e3f9347eb92815791"),
        "name" : "California Academy of Sciences",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.46636,
                        37.77014
                ]
        }
}
{
        "_id" : ObjectId("5d9753d83f9347eb92815792"),
        "name" : "Conservatory of Flowers",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.462492,
                        37.771532
                ]
        }
}
{
        "_id" : ObjectId("5d97541a3f9347eb92815793"),
        "name" : "Golden Gate Tennis Park",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.462492,
                        37.771532
                ]
        }
}





